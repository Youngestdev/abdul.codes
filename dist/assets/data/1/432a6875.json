{"data":{"post":{"id":"9e47994cf4764b280cd8660615558a97","title":"Building a crowdfund module on the Cosmos chain using Starport","content":"<blockquote>\n<blockquote>\n<p>I initially wrote this as an assessment in February for a role which didn't go work out after 2 long months ( one month unnecessary waiting ) of interviewing. Special thanks to Remi for staying up and helping with the test run the project. Chidi &#x26; Favour too, for reading the initial draft!</p>\n</blockquote>\n</blockquote>\n<p><a href=\"https://starport.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Starport</a> is a robust and flexible platform that provides the tools needed to scaffold a working decentralized application on its own independent blockain. If you're building a decentralised application and priotize ease of working, you should really look into leveraging starport.</p>\n<p>In this article, you'll create a blockchain module using Starport that allows you perform read and write operations for a crowdfund application. The application will allow a user create a crowdfund campaign, donate to a campaign by pledging an amount, removing a pledge, cancel the campaign as well as claim the donations once the campaign's goal has been met.</p>\n<p>By the end of this tutorial, you will be able to scaffold a blockchain and a module, create types, messages and implement the logic for carrying out message transactions.</p>\n<blockquote>\n<p>If this is your first time using Starport, check out the <a href=\"https://docs.starport.com/guide/hello.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">introductory tutorial</a> aimed at beginners.</p>\n</blockquote>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Prerequisites</h2>\n<p>In order to follow this tutorial, you should have:</p>\n<ul>\n<li>Golang installed on your machine</li>\n<li>Some familiarity with Golang</li>\n</ul>\n<h2 id=\"install-starport\"><a href=\"#install-starport\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install Starport</h2>\n<p>The Starport CLI is responsible for scaffolding the applications' blockchain, modules, lists and messages. In your terminal, run the command below to install Starport's CLI:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ curl https://get.starport.com/starport! | bash</code></pre></div>\n<h2 id=\"building-a-crowdfund-blockchain-module\"><a href=\"#building-a-crowdfund-blockchain-module\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Building a crowdfund blockchain module</h2>\n<p>In this section, you'll create a crowdfund blockchain module powered by Starport. The first step is to scaffold a blockchain with the <code class=\"language-text\">--no-module</code> tag:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ starport scaffold chain github.com/youngestdev/crowdfund --no-module</code></pre></div>\n<p>The command above scaffolds a blockchain <code class=\"language-text\">crowdfund</code> without creating the blockchain module. Since you'll be building the blockchain module from scratch, there's no need to automatically generate the module when creating the blockchain.</p>\n<p>Next, change the working directory to the blockchain's directory and scaffold the crowdfund module:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ cd crowdfund\n$ starport scaffold module crowdfund --dep bank</code></pre></div>\n<p>The command creates the crowdfund module indicating the dependence on the Cosmos SDK <code class=\"language-text\">bank</code> module. This means the crowdfund module will be able to access the methods contained in the <code class=\"language-text\">bank</code> module.</p>\n<p>The next step is to define the properties of the module. The module crowdfund will consist of two components:</p>\n<ol>\n<li>Campaigns</li>\n<li>Pledges</li>\n</ol>\n<h4 id=\"campaigns-component\"><a href=\"#campaigns-component\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Campaigns component</h4>\n<p>The <code class=\"language-text\">Campaigns</code> component is an array-like data structure. Each crowdfund campaign stored will be made up of the following properties:</p>\n<ul>\n<li>An <code class=\"language-text\">id</code></li>\n<li>The <code class=\"language-text\">start</code> date of the campaign</li>\n<li>The <code class=\"language-text\">end</code> date of the campaign</li>\n<li>The <code class=\"language-text\">goal</code> of the campaign</li>\n<li>The amount <code class=\"language-text\">pledged</code></li>\n<li>The <code class=\"language-text\">claimed</code> status of the campaign</li>\n<li>The <code class=\"language-text\">creator</code> of the campaign</li>\n</ul>\n<p>Now that you know how the crowdfund campaigns component is structured, scaffold the crowdfund campaigns store:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ starport scaffold list campaigns goal pledged start:int end:int claimed:bool creator --no-message</code></pre></div>\n<p>The <code class=\"language-text\">--no-message</code> flag appended to the command above is used to disable CRUD messages in the scaffold. The command automatically generates <code class=\"language-text\">proto/crowdfund/campaigns.proto</code> which contains the array-like structure and its parameters defined:</p>\n<div class=\"gridsome-highlight\" data-language=\"proto\"><pre class=\"language-proto\"><code class=\"language-proto\">message Campaigns {\n  uint64 id = 1;\n  string goal = 2;\n  string pledged = 3;\n  int64 start = 4; \n  int64 end = 5; \n  bool claimed = 6;\n  string creator = 7;\n}</code></pre></div>\n<h4 id=\"pledges-component\"><a href=\"#pledges-component\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pledges component</h4>\n<p>The <code class=\"language-text\">Pledges</code> component like the Campaigns component, is an array-like data structure. Each pledge stored will be made up of the following properties:</p>\n<ul>\n<li>An <code class=\"language-text\">id</code></li>\n<li>The campaign's id <code class=\"language-text\">cid</code> pledged to</li>\n<li>The <code class=\"language-text\">end</code> date of the campaign</li>\n<li>The amount to be <code class=\"language-text\">pledged</code></li>\n<li>The <code class=\"language-text\">address</code> of the user creating a pledge</li>\n</ul>\n<p>Now that you know how the pledges component is structured, scaffold the campaigns store:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ starport scaffold list pledges cid:uint amount address --no-message</code></pre></div>\n<p>The command creates the Pledges definition in 'proto/crowdfund/pledges.proto`:</p>\n<div class=\"gridsome-highlight\" data-language=\"proto\"><pre class=\"language-proto\"><code class=\"language-proto\">message Pledges {\n  uint64 id = 1;\n  uint64 cid = 2;\n  string amount = 3; \n  string address = 4; \n}</code></pre></div>\n<p>In <code class=\"language-text\">x/crowdfund/keeper/pledges.go</code>, define a function to retrieve a pledge entry from the user address:</p>\n<div class=\"gridsome-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// GetPledgesByAddr returns a pledge from its address</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k Keeper<span class=\"token punctuation\">)</span> <span class=\"token function\">GetPledgesByAddr</span><span class=\"token punctuation\">(</span>ctx sdk<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> addr <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>val types<span class=\"token punctuation\">.</span>Pledges<span class=\"token punctuation\">,</span> found <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tpledges <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">GetAllPledges</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> pledge <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> pledges <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> pledge<span class=\"token punctuation\">.</span>Address <span class=\"token operator\">==</span> addr <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> pledge<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> val<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now that you have defined both componenets for the crowdfund module, you will implement the messages for interacting with the module components in the next section.</p>\n<h3 id=\"messages\"><a href=\"#messages\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Messages</h3>\n<p>A message contains information that alters the state of a blockchain. For the crowdfund module, you will be implementing the messages to:</p>\n<ul>\n<li>Create campaign</li>\n<li>Claim crowdfund campaign</li>\n<li>Cancel crowdfund campaign</li>\n<li>Pledge to crowdfund campaign</li>\n<li>Withdraw pledge from a crowdfund</li>\n<li>Refund pledges</li>\n</ul>\n<p>You will be using the <code class=\"language-text\">starport scaffold message</code> command to create each of the messages. After creating a message, a keeper file is generated as <code class=\"language-text\">x/crowdfund/keeper/msg_server_{MESSAGE NAME}.go</code>. The keeper file will house the operations carried out when a message transaction is broadcasted.</p>\n<h4 id=\"create-campaign-message\"><a href=\"#create-campaign-message\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Create Campaign Message</h4>\n<p>The first line of action for the crowdfund is to create a crowdfund campaign. As a result, the inital message will handle the transaction when a user creates a crowdfund campaign.</p>\n<p>The crowdfund campaign <code class=\"language-text\">launch</code> message requires three input parameters: the <code class=\"language-text\">goal</code> of the campaign, the <code class=\"language-text\">start</code> date and <code class=\"language-text\">end</code> date of the campaign. Both dates have the format YY-MM-DD/HH:MM.\nIn your terminal, create the <code class=\"language-text\">launch</code> message:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">starport scaffold message launch goal start end</code></pre></div>\n<p>The <code class=\"language-text\">launch</code> message creates a new campaigns object and stores the passed parameters if the following conditions are met:</p>\n<ol>\n<li>The campaign can not start in the past</li>\n<li>The campaign can not end before starting</li>\n<li>The campaign's duration should not be more than 90 days</li>\n</ol>\n<p>In the project directory in a separate terminal, install the <code class=\"language-text\">dateparse</code> module:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ go get -u github.com/araddon/dateparse</code></pre></div>\n<p>In the keeper file <code class=\"language-text\">x/crowdfund/keeper/msg_server_launch.go</code>, update your imports:</p>\n<div class=\"gridsome-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"context\"</span>\n\tsdkerrors <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types/errors\"</span>\n\t<span class=\"token string\">\"strings\"</span>\n\t<span class=\"token string\">\"time\"</span>\n\t\n\t<span class=\"token string\">\"github.com/araddon/dateparse\"</span>\n\tsdk <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types\"</span>\n\t<span class=\"token string\">\"github.com/youngestdev/crowdfund/x/crowdfund/types\"</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Next, you'll need the start and end input to date type and create a maximum duration value. To do that, modify the <code class=\"language-text\">Launch()</code> function:</p>\n<div class=\"gridsome-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k msgServer<span class=\"token punctuation\">)</span> <span class=\"token function\">Launch</span><span class=\"token punctuation\">(</span>goCtx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> msg <span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgLaunch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgLaunchResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tctx <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">UnwrapSDKContext</span><span class=\"token punctuation\">(</span>goCtx<span class=\"token punctuation\">)</span>\n\tstartDate <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>Start<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\tendDate <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>End<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\n\tstart<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> dateparse<span class=\"token punctuation\">.</span><span class=\"token function\">ParseLocal</span><span class=\"token punctuation\">(</span>startDate<span class=\"token punctuation\">)</span>\n\tend<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> dateparse<span class=\"token punctuation\">.</span><span class=\"token function\">ParseLocal</span><span class=\"token punctuation\">(</span>endDate<span class=\"token punctuation\">)</span>\n\t\n\tmaxDuration <span class=\"token operator\">:=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2160</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Hour<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Next, implement the conditions beneath the <code class=\"language-text\">maxDuration</code> value and save the campaign:</p>\n<div class=\"gridsome-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">if</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">BlockTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">After</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can not launch campaign before now\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> end<span class=\"token punctuation\">.</span><span class=\"token function\">Before</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can not end campaign before start\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> end<span class=\"token punctuation\">.</span><span class=\"token function\">After</span><span class=\"token punctuation\">(</span>maxDuration<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"End should be less than maximum duration\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">var</span> campaign <span class=\"token operator\">=</span> types<span class=\"token punctuation\">.</span>Campaigns<span class=\"token punctuation\">{</span>\n\t\tCreator<span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">.</span>Creator<span class=\"token punctuation\">,</span>\n\t\tGoal<span class=\"token punctuation\">:</span>    msg<span class=\"token punctuation\">.</span>Goal<span class=\"token punctuation\">,</span>\n\t\tPledged<span class=\"token punctuation\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span>\n\t\tStart<span class=\"token punctuation\">:</span>   start<span class=\"token punctuation\">.</span><span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\tEnd<span class=\"token punctuation\">:</span>     end<span class=\"token punctuation\">.</span><span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\tClaimed<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n  \n  \tk<span class=\"token punctuation\">.</span><span class=\"token function\">AppendCampaigns</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> campaign<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Great! You have created the <code class=\"language-text\">launch</code> message, run the chain and create your first crowdfund campaign. In your terminal, run the command:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ starport chain serve</code></pre></div>\n<p>In another terminal, create your first crowdfund campaign:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd tx crowdfund launch 1000 2022-03-03/17:00 2022-03-03/17:30 --from alice</code></pre></div>\n<p>The <code class=\"language-text\">--from</code> indicates the user alex creating the campaign.</p>\n<p>Use the query command below to view the newly created campaign:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd query crowdfund list-campaigns</code></pre></div>\n<p>The newly created campaign is present in the list:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">Campaigns:\n- claimed: false\n  creator: cosmos1xr2yu5q9gdf93nllv7kq3z6yghvzttlzuu8szu\n  end: &quot;1646325000&quot;\n  goal: &quot;1000&quot;\n  id: &quot;0&quot;\n  pledged: &quot;0&quot;\n  start: &quot;1646323200&quot;</code></pre></div>\n<h4 id=\"cancel-crowdfund-campaign\"><a href=\"#cancel-crowdfund-campaign\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cancel Crowdfund Campaign</h4>\n<p>A user can decide to cancel the crowdfund campaign after it has been created. However, the campaign can be canceled by the creator only if the crowdfund camapaign is yet to start.</p>\n<p>To cancel a campaign, the message transaction requires the campaign <code class=\"language-text\">id</code>. Scaffold the <code class=\"language-text\">cancel</code> message to take a parameter <code class=\"language-text\">id</code> of type <code class=\"language-text\">uint</code>:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ starport scaffold message cancel id:uint</code></pre></div>\n<p>Implement the condition for the cancel in <code class=\"language-text\">x/crowdfund/keeper/msg_server_cancel.go</code>:</p>\n<div class=\"gridsome-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> keeper\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"context\"</span>\n\tsdkerrors <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types/errors\"</span>\n\t\n\tsdk <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types\"</span>\n\t<span class=\"token string\">\"github.com/youngestdev/crowdfund/x/crowdfund/types\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k msgServer<span class=\"token punctuation\">)</span> <span class=\"token function\">Cancel</span><span class=\"token punctuation\">(</span>goCtx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> msg <span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgCancel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgCancelResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tctx <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">UnwrapSDKContext</span><span class=\"token punctuation\">(</span>goCtx<span class=\"token punctuation\">)</span>\n\tcampaign<span class=\"token punctuation\">,</span> found <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">GetCampaigns</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">if</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">BlockTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> campaign<span class=\"token punctuation\">.</span>Start <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"campaign started\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>found <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrKeyNotFound<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid campaign ID\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> campaign<span class=\"token punctuation\">.</span>Creator <span class=\"token operator\">!=</span> msg<span class=\"token punctuation\">.</span>Creator <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrUnauthorized<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cannot cancel: not the creator\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\tk<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveCampaigns</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>types<span class=\"token punctuation\">.</span>MsgCancelResponse<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the snippet above, the message <code class=\"language-text\">cancel</code> will remove the campaign from the list of campaigns.</p>\n<p>Create a new campaign starting tomorrow:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd tx crowdfund launch 1000 2022-03-04/17:20 2022-03-4/17:30 --from alice</code></pre></div>\n<p>Query the list of campaigns:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd query crowdfund list-campaigns\n\nCampaigns:\n- claimed: false\n  creator: cosmos1xr2yu5q9gdf93nllv7kq3z6yghvzttlzuu8szu\n  end: &quot;1646325000&quot;\n  goal: &quot;1000&quot;\n  id: &quot;0&quot;\n  pledged: &quot;0&quot;\n  start: &quot;1646323200&quot;\n- claimed: false\n  creator: cosmos1xr2yu5q9gdf93nllv7kq3z6yghvzttlzuu8szu\n  end: &quot;1646325000&quot;\n  goal: &quot;1000&quot;\n  id: &quot;1&quot;\n  pledged: &quot;0&quot;\n  start: &quot;1646324400&quot;\npagination:\n  next_key: null\n  total: &quot;0&quot;</code></pre></div>\n<p>Cancel the crowdfund campaign and query the list of crowdfund campaigns:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd tx crowdfund cancel 1 --from alice</code></pre></div>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd query crowdfund list-campaigns\n\nCampaigns:\n- claimed: false\n  creator: cosmos1xr2yu5q9gdf93nllv7kq3z6yghvzttlzuu8szu\n  end: &quot;1646325000&quot;\n  goal: &quot;1000&quot;\n  id: &quot;0&quot;\n  pledged: &quot;0&quot;\n  start: &quot;1646323200&quot;\npagination:\n  next_key: null\n  total: &quot;0&quot;</code></pre></div>\n<p>From the response above, the campaign has been removed from the list.</p>\n<h4 id=\"pledge-to-crowdfund-campaign\"><a href=\"#pledge-to-crowdfund-campaign\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pledge to Crowdfund Campaign</h4>\n<p>You have successfully implemented the logic for creating and cancelling a campaign. Now, you'll implement the logic to allow a user pledge to an ongoing crowdfund campaign. This logic will also add the user to the <code class=\"language-text\">Pledges</code> list defined earlier on, and update the campaign with the value pledged.</p>\n<p>Scaffold the <code class=\"language-text\">pledge</code> to allow users pledge to an ongoing campaign:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ starport scaffold message pledge id:uint amount</code></pre></div>\n<p>The logic for pledging to a campaign is defined in <code class=\"language-text\">x/crowdfund/keeper/msg_server_pledge.go</code>:</p>\n<div class=\"gridsome-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"context\"</span>\n\tsdkerrors <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types/errors\"</span>\n\t\n\tsdk <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types\"</span>\n\t<span class=\"token string\">\"github.com/youngestdev/crowdfund/x/crowdfund/types\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k msgServer<span class=\"token punctuation\">)</span> <span class=\"token function\">Pledge</span><span class=\"token punctuation\">(</span>goCtx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> msg <span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgPledge<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgPledgeResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tctx <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">UnwrapSDKContext</span><span class=\"token punctuation\">(</span>goCtx<span class=\"token punctuation\">)</span>\n\t\n\tcampaign<span class=\"token punctuation\">,</span> found <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">GetCampaigns</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>found <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrNotFound<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Campaign not found\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">BlockTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> campaign<span class=\"token punctuation\">.</span>Start <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"campaign not started\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">BlockTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> campaign<span class=\"token punctuation\">.</span>End <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"campaign ended\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> campaign<span class=\"token punctuation\">.</span>Claimed <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrConflict<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Crowdfund has been claimed\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\tpledgeAddress<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">AccAddressFromBech32</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>Creator<span class=\"token punctuation\">)</span>\n\t\n\tamount<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>Amount<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInsufficientFunds<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cannot pledge\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// Until campaign has ended and claimed, hold the money in an escrow - module.</span>\n\t\n\tsdkError <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span>bankKeeper<span class=\"token punctuation\">.</span><span class=\"token function\">SendCoinsFromAccountToModule</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> pledgeAddress<span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">.</span>ModuleName<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> sdkError <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkError\n\t<span class=\"token punctuation\">}</span>\n\t\n\tamnt<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinNormalized</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>Amount<span class=\"token punctuation\">)</span>\n\t\n\tamountPledged<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>campaign<span class=\"token punctuation\">.</span>Pledged<span class=\"token punctuation\">)</span>\n\t\n\tnewAmountPledged <span class=\"token operator\">:=</span> amountPledged<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>amnt<span class=\"token punctuation\">)</span>\n\t\n\tcampaign<span class=\"token punctuation\">.</span>Pledged <span class=\"token operator\">=</span> newAmountPledged<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token comment\">// Update Pledgers list</span>\n\t\n\tpledge<span class=\"token punctuation\">,</span> found <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">GetPledgesByAddr</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>Creator<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">if</span> found <span class=\"token punctuation\">{</span>\n\t\tpledged<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>pledge<span class=\"token punctuation\">.</span>Amount<span class=\"token punctuation\">)</span>\n\t\tincrementPledge <span class=\"token operator\">:=</span> pledged<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>amnt<span class=\"token punctuation\">)</span>\n\t\tpledge<span class=\"token punctuation\">.</span>Amount <span class=\"token operator\">=</span> incrementPledge<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\">// Update pledged amount</span>\n\t\tk<span class=\"token punctuation\">.</span><span class=\"token function\">SetPledges</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> pledge<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>found <span class=\"token punctuation\">{</span>\n\t\tnewPledge <span class=\"token operator\">:=</span> types<span class=\"token punctuation\">.</span>Pledges<span class=\"token punctuation\">{</span>\n\t\t\tCid<span class=\"token punctuation\">:</span>     campaign<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">,</span>\n\t\t\tAmount<span class=\"token punctuation\">:</span>  msg<span class=\"token punctuation\">.</span>Amount<span class=\"token punctuation\">,</span>\n\t\t\tAddress<span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">.</span>Creator<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tk<span class=\"token punctuation\">.</span><span class=\"token function\">AppendPledges</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> newPledge<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\tk<span class=\"token punctuation\">.</span><span class=\"token function\">SetCampaigns</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> campaign<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>types<span class=\"token punctuation\">.</span>MsgPledgeResponse<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The logic above interacts with the bank module via the <code class=\"language-text\">k.bankkeeper.SendCoinsFromAccountToModule()</code> method. Therefore, update the <code class=\"language-text\">BankKeeper</code> interface in <code class=\"language-text\">x/crowdfund/types/expected_keepers.go</code>:</p>\n<div class=\"gridsome-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// BankKeeper defines the expected interface needed to retrieve account balances.</span>\n<span class=\"token keyword\">type</span> BankKeeper <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">SpendableCoins</span><span class=\"token punctuation\">(</span>ctx sdk<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> addr sdk<span class=\"token punctuation\">.</span>AccAddress<span class=\"token punctuation\">)</span> sdk<span class=\"token punctuation\">.</span>Coins\n\t<span class=\"token function\">SendCoins</span><span class=\"token punctuation\">(</span>ctx sdk<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> fromAddr sdk<span class=\"token punctuation\">.</span>AccAddress<span class=\"token punctuation\">,</span> toAddr sdk<span class=\"token punctuation\">.</span>AccAddress<span class=\"token punctuation\">,</span> amt sdk<span class=\"token punctuation\">.</span>Coins<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span>\n\t<span class=\"token function\">SendCoinsFromAccountToModule</span><span class=\"token punctuation\">(</span>ctx sdk<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> senderAddr sdk<span class=\"token punctuation\">.</span>AccAddress<span class=\"token punctuation\">,</span> recipientModule <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> amt sdk<span class=\"token punctuation\">.</span>Coins<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span>\n\t<span class=\"token function\">SendCoinsFromModuleToAccount</span><span class=\"token punctuation\">(</span>ctx sdk<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> senderModule <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> recipientAddr sdk<span class=\"token punctuation\">.</span>AccAddress<span class=\"token punctuation\">,</span> amt sdk<span class=\"token punctuation\">.</span>Coins<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span>\n\t<span class=\"token comment\">// Methods imported from bank should be defined here</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When a pledge is made, the funds pledged is locked in the escrow module account. This is to enable the user withdraw his pledge and ask for a refund if the campaign fails to meet its target.</p>\n<p>Great! Restart the blockchain using the <code class=\"language-text\">-r</code> flag to reset the state:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ starport chain serve -r</code></pre></div>\n<p>Create a new crowdfund campaign:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd tx crowdfund launch 1000 2022-03-03/17:48 2022-03-03/20:00 --from alice</code></pre></div>\n<p>The blockchain user bob, will like to pledge to the ongoing campaign. Make a pledge to the campaign from bob's account:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">crowdfundd tx crowdfund pledge 0 500token --from bob</code></pre></div>\n<p>Query the list of campaigns to view the updated campaign pledged amount:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd query crowdfund list-campaigns\n\nCampaigns:\n- claimed: false\n  creator: cosmos1zmgq88hczg40hnz6z5f4mjccdxpnar76fjvu3a\n  end: &quot;1646334000&quot;\n  goal: &quot;1000&quot;\n  id: &quot;0&quot;\n  pledged: 500token\n  start: &quot;1646326080&quot;</code></pre></div>\n<p>Query the list of pledges to view the new pledge entry:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd query crowdfund list-pledges\n\nPledges:\n- address: cosmos19gc4lttkrgx45s87s7nm6sltrw29qa636mwsgq\n  amount: 500token\n  cid: &quot;0&quot;\n  id: &quot;0&quot;</code></pre></div>\n<h4 id=\"withdraw-pledge-from-crowdfund-campaign\"><a href=\"#withdraw-pledge-from-crowdfund-campaign\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Withdraw Pledge from Crowdfund Campaign</h4>\n<p>After a pledge, the user can choose to withdraw their pledge made before the campaign ends. For the user to withdraw their pledge, the <code class=\"language-text\">unpledge</code> message needs to be defined.</p>\n<p>The message <code class=\"language-text\">unpledge</code> takes two paramters: the campaign <code class=\"language-text\">id</code> and <code class=\"language-text\">amount</code> pledged:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ starport scaffold message unpledge id:uint amount</code></pre></div>\n<p>In <code class=\"language-text\">x/crowdfund/keepers/msg_server_unpledge.go</code>, implement the logic:</p>\n<div class=\"gridsome-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> keeper\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"context\"</span>\n\tsdkerrors <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types/errors\"</span>\n\t\n\tsdk <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types\"</span>\n\t<span class=\"token string\">\"github.com/youngestdev/crowdfund/x/crowdfund/types\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k msgServer<span class=\"token punctuation\">)</span> <span class=\"token function\">Unpledge</span><span class=\"token punctuation\">(</span>goCtx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> msg <span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgUnpledge<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgUnpledgeResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tctx <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">UnwrapSDKContext</span><span class=\"token punctuation\">(</span>goCtx<span class=\"token punctuation\">)</span>\n\t\n\tcampaign<span class=\"token punctuation\">,</span> found <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">GetCampaigns</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span>\n\tpledge<span class=\"token punctuation\">,</span> present <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">GetPledgesByAddr</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>Creator<span class=\"token punctuation\">)</span>\n\treduction<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>Amount<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>found <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrNotFound<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Campaign not found\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> present <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrNotFound<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pledge not found\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// If current time is past the end time for the campaign</span>\n\t<span class=\"token keyword\">if</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">BlockTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> campaign<span class=\"token punctuation\">.</span>End <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"campaign has ended\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\tpledged<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>pledge<span class=\"token punctuation\">.</span>Amount<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">if</span> reduction<span class=\"token punctuation\">.</span><span class=\"token function\">IsAllGT</span><span class=\"token punctuation\">(</span>pledged<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pledge less than supply amount\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\tdecrementPledge <span class=\"token operator\">:=</span> pledged<span class=\"token punctuation\">.</span><span class=\"token function\">Sub</span><span class=\"token punctuation\">(</span>reduction<span class=\"token punctuation\">)</span>\n\tpledge<span class=\"token punctuation\">.</span>Amount <span class=\"token operator\">=</span> decrementPledge<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// Update pledged amount</span>\n\tk<span class=\"token punctuation\">.</span><span class=\"token function\">SetPledges</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> pledge<span class=\"token punctuation\">)</span>\n\t\n\tpledgeAddress<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">AccAddressFromBech32</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>Creator<span class=\"token punctuation\">)</span>\n\tamountPledged<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>campaign<span class=\"token punctuation\">.</span>Pledged<span class=\"token punctuation\">)</span>\n\t\n\tnewAmountPledged <span class=\"token operator\">:=</span> amountPledged<span class=\"token punctuation\">.</span><span class=\"token function\">Sub</span><span class=\"token punctuation\">(</span>reduction<span class=\"token punctuation\">)</span>\n\t\n\tcampaign<span class=\"token punctuation\">.</span>Pledged <span class=\"token operator\">=</span> newAmountPledged<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\n\tk<span class=\"token punctuation\">.</span><span class=\"token function\">SetCampaigns</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> campaign<span class=\"token punctuation\">)</span>\n\tk<span class=\"token punctuation\">.</span>bankKeeper<span class=\"token punctuation\">.</span><span class=\"token function\">SendCoinsFromModuleToAccount</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">.</span>ModuleName<span class=\"token punctuation\">,</span> pledgeAddress<span class=\"token punctuation\">,</span> reduction<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>types<span class=\"token punctuation\">.</span>MsgUnpledgeResponse<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">unpledge</code> message requires two conditions:</p>\n<ul>\n<li>The operation must be executed by the user who made the pledge.</li>\n<li>The amount to be withdrawn must not exceed the amount pledged.</li>\n</ul>\n<p>If all the conditions are met, the pledged amount is withdrawn and transfered to the user. The campaigns and pledges lists are equally updated.</p>\n<p>With the implementation in place, unpledge 250token from the previously pledged campaign:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd tx crowdfund unpledge 0 250token --from bob</code></pre></div>\n<p>Query the list of campaigns to view the changes:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd query crowdfund list-campaigns\n\nCampaigns:\n- claimed: false\n  creator: cosmos1zmgq88hczg40hnz6z5f4mjccdxpnar76fjvu3a\n  end: &quot;1646334000&quot;\n  goal: &quot;1000&quot;\n  id: &quot;0&quot;\n  pledged: 250token\n  start: &quot;1646326080&quot;</code></pre></div>\n<p>The value for <code class=\"language-text\">pledged</code> has been reduced by <code class=\"language-text\">250token</code>.</p>\n<p>Query the list of pledges to view the changes:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd query crowdfund list-pledges\n\nPledges:\n- address: cosmos19gc4lttkrgx45s87s7nm6sltrw29qa636mwsgq\n  amount: 250token\n  cid: &quot;0&quot;\n  id: &quot;0&quot;</code></pre></div>\n<h4 id=\"claim-crowdfund-campaign\"><a href=\"#claim-crowdfund-campaign\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Claim Crowdfund Campaign</h4>\n<p>The campaign creator can claim the funds pledged once the goal has been met and the campaign ended. Scaffold the message for <code class=\"language-text\">claim</code> that takes a parameter <code class=\"language-text\">id</code>:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ starport scaffold message claim id:uint</code></pre></div>\n<p>To claim a crowdfund campaign, the folllowing conditions must be met:</p>\n<ul>\n<li>The goal must be met</li>\n<li>The campaigned has ended</li>\n</ul>\n<p>In <code class=\"language-text\">x/crowdfund/keeper/msg_server_claim.go</code>:</p>\n<div class=\"gridsome-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> keeper\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"context\"</span>\n\tsdkerrors <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types/errors\"</span>\n\t\n\tsdk <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types\"</span>\n\t<span class=\"token string\">\"github.com/youngestdev/crowdfund/x/crowdfund/types\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k msgServer<span class=\"token punctuation\">)</span> <span class=\"token function\">Claim</span><span class=\"token punctuation\">(</span>goCtx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> msg <span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgClaim<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgClaimResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tctx <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">UnwrapSDKContext</span><span class=\"token punctuation\">(</span>goCtx<span class=\"token punctuation\">)</span>\n\tcrowdfundAddress<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">AccAddressFromBech32</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>Creator<span class=\"token punctuation\">)</span>\n\tcampaign<span class=\"token punctuation\">,</span> found <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">GetCampaigns</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span>\n\t\n\tpledgedAmnt<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>campaign<span class=\"token punctuation\">.</span>Pledged<span class=\"token punctuation\">)</span>\n\tgoal<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>campaign<span class=\"token punctuation\">.</span>Goal<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>found <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrKeyNotFound<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Campaign does not exist\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> campaign<span class=\"token punctuation\">.</span>Creator <span class=\"token operator\">!=</span> msg<span class=\"token punctuation\">.</span>Creator <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrUnauthorized<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Claim failed: you're not the creator\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">BlockTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> campaign<span class=\"token punctuation\">.</span>End <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can not claim campaign before end date\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> pledgedAmnt<span class=\"token punctuation\">.</span><span class=\"token function\">IsAllLT</span><span class=\"token punctuation\">(</span>goal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInsufficientFunds<span class=\"token punctuation\">,</span> <span class=\"token string\">\"goal not met\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> campaign<span class=\"token punctuation\">.</span>Claimed <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"campaign claimed already\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\tcampaign<span class=\"token punctuation\">.</span>Claimed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\t\n\tfunds<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>campaign<span class=\"token punctuation\">.</span>Pledged<span class=\"token punctuation\">)</span>\n\tk<span class=\"token punctuation\">.</span>bankKeeper<span class=\"token punctuation\">.</span><span class=\"token function\">SendCoinsFromModuleToAccount</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">.</span>ModuleName<span class=\"token punctuation\">,</span> crowdfundAddress<span class=\"token punctuation\">,</span> funds<span class=\"token punctuation\">)</span>\n\t\n\tk<span class=\"token punctuation\">.</span><span class=\"token function\">SetCampaigns</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> campaign<span class=\"token punctuation\">)</span>\n\t\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>types<span class=\"token punctuation\">.</span>MsgClaimResponse<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The following changes are made once the conditions are met:</p>\n<ul>\n<li>The funds pledged are released from the module escrow accout to the creator of the crowdfund campaign.</li>\n<li>The claimed status of the campaign is set to true to avoid reclaiming and the campaign object is updated.</li>\n</ul>\n<p>Now that you have successfully implemented the claim logic, create a new camapaign that ends in a short period e.g 3 minutes to test the claim message:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd tx crowdfund launch 500token 2022-03-03/19:44 2022-03-03/19:46 --from alice</code></pre></div>\n<p>Query the campaigns list:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd query crowdfund list-campaigns\n\n  claimed: false\n  creator: cosmos1zmgq88hczg40hnz6z5f4mjccdxpnar76fjvu3a\n  end: &quot;1646333160&quot;\n  goal: 500token\n  id: &quot;1&quot;\n  pledged: &quot;0&quot;</code></pre></div>\n<p>Make a pledge of 500token:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd tx crowdfund pledge 1 500token --from bob</code></pre></div>\n<p>Query campaigns to verify the pledge:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfund query crowdfund list-pledges\n\n- claimed: false\n  creator: cosmos1zmgq88hczg40hnz6z5f4mjccdxpnar76fjvu3a\n  end: &quot;1646333160&quot;\n  goal: 500token\n  id: &quot;1&quot;\n  pledged: 500token\n  start: &quot;1646333040&quot;</code></pre></div>\n<p>Claim the crowfund campaign:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd tx crowdfund claim 1 --from alice</code></pre></div>\n<p>Query campaigns to view changes:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd query crowdfund list-campaigns\n\n- claimed: true\n  creator: cosmos1zmgq88hczg40hnz6z5f4mjccdxpnar76fjvu3a\n  end: &quot;1646333160&quot;\n  goal: 500token\n  id: &quot;1&quot;\n  pledged: 500token\n  start: &quot;1646333040&quot;</code></pre></div>\n<p>Running the command again returns an error:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">raw_log: &#39;failed to execute message; message index: 0: campaign claimed already: invalid\n  request&#39;</code></pre></div>\n<h4 id=\"refund-pledge\"><a href=\"#refund-pledge\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Refund Pledge</h4>\n<p>Lastly, if the crowdfund campaign fails to meet its target after the end date then users who made a pledge can ask for a refund.</p>\n<p>Scaffold the <code class=\"language-text\">refund</code> message which takes an <code class=\"language-text\">id</code> as the only parameter:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ starport scaffold message refund id:uint</code></pre></div>\n<p>The <code class=\"language-text\">refund</code> message requires that the following conditions are met:</p>\n<ul>\n<li>The campaign failed to meet it's goal.</li>\n<li>The campaign has ended.</li>\n<li>The user made a pledge.</li>\n</ul>\n<p>In <code class=\"language-text\">x/crowdfund/keeper/msg_server_refund.go</code>, implement the logic to refund the users' pledge if the conditions above are met:</p>\n<div class=\"gridsome-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> keeper\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"context\"</span>\n\tsdkerrors <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types/errors\"</span>\n\t\n\tsdk <span class=\"token string\">\"github.com/cosmos/cosmos-sdk/types\"</span>\n\t<span class=\"token string\">\"github.com/youngestdev/crowdfund/x/crowdfund/types\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>k msgServer<span class=\"token punctuation\">)</span> <span class=\"token function\">Refund</span><span class=\"token punctuation\">(</span>goCtx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> msg <span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgRefund<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>types<span class=\"token punctuation\">.</span>MsgRefundResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tctx <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">UnwrapSDKContext</span><span class=\"token punctuation\">(</span>goCtx<span class=\"token punctuation\">)</span>\n\t\n\tcampaign<span class=\"token punctuation\">,</span> found <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">GetCampaigns</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span>\n\tpledge<span class=\"token punctuation\">,</span> present <span class=\"token operator\">:=</span> k<span class=\"token punctuation\">.</span><span class=\"token function\">GetPledgesByAddr</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>Creator<span class=\"token punctuation\">)</span>\n\t\n\tpledgedAmnt<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>campaign<span class=\"token punctuation\">.</span>Pledged<span class=\"token punctuation\">)</span>\n\tgoal<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>campaign<span class=\"token punctuation\">.</span>Goal<span class=\"token punctuation\">)</span>\n\t\n\tpledgeAddress<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">AccAddressFromBech32</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>Creator<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>present <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrNotFound<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pledge not found\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>found <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrKeyNotFound<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Campaign does not exist\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">BlockTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Unix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> campaign<span class=\"token punctuation\">.</span>End <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can not refund campaign before end date\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> pledgedAmnt<span class=\"token punctuation\">.</span><span class=\"token function\">IsAllGTE</span><span class=\"token punctuation\">(</span>goal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> sdkerrors<span class=\"token punctuation\">.</span><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>sdkerrors<span class=\"token punctuation\">.</span>ErrInvalidRequest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Target met\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\tpledged<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> sdk<span class=\"token punctuation\">.</span><span class=\"token function\">ParseCoinsNormalized</span><span class=\"token punctuation\">(</span>pledge<span class=\"token punctuation\">.</span>Amount<span class=\"token punctuation\">)</span>\n\tcampaign<span class=\"token punctuation\">.</span>Pledged <span class=\"token operator\">=</span> pledged<span class=\"token punctuation\">.</span><span class=\"token function\">Sub</span><span class=\"token punctuation\">(</span>pledged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tk<span class=\"token punctuation\">.</span>bankKeeper<span class=\"token punctuation\">.</span><span class=\"token function\">SendCoinsFromModuleToAccount</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">.</span>ModuleName<span class=\"token punctuation\">,</span> pledgeAddress<span class=\"token punctuation\">,</span> pledged<span class=\"token punctuation\">)</span>\n\tk<span class=\"token punctuation\">.</span><span class=\"token function\">RemovePledges</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> pledge<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span>\n\tk<span class=\"token punctuation\">.</span><span class=\"token function\">SetCampaigns</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> campaign<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>types<span class=\"token punctuation\">.</span>MsgRefundResponse<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If the conditions aforementioned are met, the amount pledged is refunded and the campaign updated accordingly. However, an error will be returned if the refund is carried out on a campaign whose target was met.</p>\n<p>Restart your blockain using the <code class=\"language-text\">-r</code> flag to reset the blockchain's state:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ starport chain serve -r</code></pre></div>\n<p>Create a new crowdfund campaign:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd tx crowdfund launch 1000token 2022-03-03/22:39 2022-03-03/22:43 --from bob</code></pre></div>\n<p>Pledge 500 token for the first crowdfund:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd tx crowdfund pledge 0 500token --from alice</code></pre></div>\n<p>Query your campaigns:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd query crowdfund list-campaigns\n\nCampaigns:\n- claimed: false\n  creator: cosmos1eqkpxpxwllveazx24cutwj2z6z202nakj34w4t\n  end: &quot;1646343780&quot;\n  goal: 1000token\n  id: &quot;0&quot;\n  pledged: 500token\n  start: &quot;1646343600&quot;</code></pre></div>\n<p>The time for the first campaign with <code class=\"language-text\">id</code> 0 has lapsed, initiate a refund:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd tx crowdfund refund 0 --from alice</code></pre></div>\n<p>Query your campaigns:</p>\n<div class=\"gridsome-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ crowdfundd query crowdfund list-campaigns\n\nCampaigns:\n- claimed: false\n  creator: cosmos1eqkpxpxwllveazx24cutwj2z6z202nakj34w4t\n  end: &quot;1646343780&quot;\n  goal: 1000token\n  id: &quot;0&quot;\n  pledged: &quot;&quot;\n  start: &quot;1646343600&quot;\npagination:\n  next_key: null\n  total: &quot;0&quot;</code></pre></div>\n<p>From the query result above, you will notice that the <code class=\"language-text\">pledged</code> is now empty indicating that the operation was successful.</p>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h2>\n<p>This article taught you how to build a crowdfund blockchain module using Starport. You also learned how to scaffold and use the starport cli efficiently, as well as broadcast transactions to the blockchain from the command line and took advantage of the hot-reload provided by starport to facilitate the build process.</p>\n<p>Now that you have learned how to build a module, create a blockchain module to refresh all what you've learned. You can find the code used in this article on <a href=\"https://github.com/Youngestdev/pledgetogoal\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub</a></p>\n<h2 id=\"comments\"><a href=\"#comments\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Comments</h2>\n<ul>\n<li>The logic can be improved. I discovered a better way of implementing certain parts but will leave them until I am chanced to fix it.</li>\n</ul>\n","date":"28 April 2022","timeToRead":18,"image":null}},"context":{}}