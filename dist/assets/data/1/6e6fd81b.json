{"data":{"post":{"id":"1f53f7b81e165725ca1248781c2060f8","title":"Mini Server Watch Board","content":"<p>At <a href=\"https://thecodecafe.co\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Codecaf√©</a>, we've been building a product which will be unveiled soon. For this product, I\nwork as the lead <em>solo</em> backend engineer where I happen to have spent the last few months doing some interesting\nengineering work.</p>\n<blockquote>\n<p>Unfortunately, this blogpost isn't going to be detailed. It's basically a summary because I just wanted to write it.\nHopefully someday when I have buttressed my knowledge, I can write more engineering focused articles.</p>\n</blockquote>\n<p>The development for our product is distributed among the founders and I happen to have so much free time, so my churn\nrate\nhas been really high. Some weeks ago, I became curious and decided to build a monitoring dashboard in an attempt to see\nwhat's going on in the backend memory wise.</p>\n<p>The original idea was a dashboard where I can see the <strong>average</strong> time for a\nrequest. Locally, the requests are fast but what happens when we launch and have several users? We'll scale, I know.</p>\n<p>I had help with Claude (my first time using Claude and I think it's way better than GPT?) for the dashboard because I\ncan't save my life writing anything frontend.</p>\n<h2 id=\"server-watch\"><a href=\"#server-watch\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Server watch</h2>\n<p>The dashboard monitors the application's metrics such as request counts (and to what endpoints) and the memory usage.\nThese classes are parent classes or should I call them the <strong>main utility</strong> classes. They're both used in another class\n<code class=\"language-text\">EnhancedHealthCheck</code>, where the requests are tracked and the memory is properly analysed.</p>\n<blockquote>\n<p>The memory consumption monitored is basically due to database operations.</p>\n</blockquote>\n<h3 id=\"what-tool\"><a href=\"#what-tool\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>What tool?</h3>\n<p>Well, the key tool used is <a href=\"https://pypi.org/project/psutil/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">psutil</a>. It's a library used to monitor systems and\nprocess management. I also made use of <code class=\"language-text\">motor</code> for MongoDB database connection and FastAPI for defining a route to\npreview the dashboard.</p>\n<blockquote>\n<p>The first time I ran the code, I was really worried when I saw a 82% usage. Apparently, this was unrelated to the app\nand was a culmination of some processes altogether on my laptop. Huge relief.</p>\n</blockquote>\n<p>That's that, I'll get to it.</p>\n<h3 id=\"application-metrics\"><a href=\"#application-metrics\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Application metrics</h3>\n<p>For the application metrics, I wanted to see what endpoints was visited the most. During development, I have a mental\nmemory of the routes I visit a lot. I just wanted to have fun and see this in realtime.</p>\n<p>So, the class for mananging the metrics contained three methods:</p>\n<ol>\n<li>The <code class=\"language-text\">add_error</code> which sustained a list of errors which had occured when using the application. 400s, 500s, etc.</li>\n<li>The <code class=\"language-text\">get_average_response_time</code> which is the key method for me. This returned the average response time by diving the\nnumber of response times against the sum of the response times.... I think this is called <em>mean</em>. Oh, average.</li>\n<li>The <code class=\"language-text\">get_error_rate</code> method which told me \"Hey, be ashamed of yourself for all these errors!\"</li>\n</ol>\n<p>All of these put into consideration and we have the class:</p>\n<div class=\"gridsome-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> psutil\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ApplicationMetrics</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tself<span class=\"token punctuation\">.</span>start_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\tself<span class=\"token punctuation\">.</span>request_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\t\tself<span class=\"token punctuation\">.</span>error_count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\t\tself<span class=\"token punctuation\">.</span>response_times <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\t\tself<span class=\"token punctuation\">.</span>endpoints_usage <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\tself<span class=\"token punctuation\">.</span>status_codes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\tself<span class=\"token punctuation\">.</span>last_errors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\t\tself<span class=\"token punctuation\">.</span>max_stored_errors <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">add_error</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">:</span> Dict<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> Any<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tself<span class=\"token punctuation\">.</span>last_errors<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>last_errors<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>max_stored_errors<span class=\"token punctuation\">:</span>\n\t\t\tself<span class=\"token punctuation\">.</span>last_errors<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">get_average_response_time</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>response_times<span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>response_times<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>response_times<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">get_error_rate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>request_count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>error_count <span class=\"token operator\">/</span> self<span class=\"token punctuation\">.</span>request_count<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span></code></pre></div>\n<h3 id=\"memory-analytics\"><a href=\"#memory-analytics\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Memory analytics</h3>\n<p>I made use of <code class=\"language-text\">psutil</code> here. The methods:</p>\n<ol>\n<li><code class=\"language-text\">get_process_memory_details()</code> does as it's named. It returns a detailed memory usage for the current process. For\nexample, process A is handled by an endpoint, it returns that.</li>\n<li><code class=\"language-text\">get_system_memory_details()</code> was the method that made me panic because it was reading all system-wide info\ninitially.</li>\n</ol>\n<div class=\"gridsome-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MemoryAnalytics</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token decorator annotation punctuation\">@staticmethod</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">get_process_memory_details</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Dict<span class=\"token punctuation\">:</span>\n\t\tprocess <span class=\"token operator\">=</span> psutil<span class=\"token punctuation\">.</span>Process<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t\tmemory_info <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>memory_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t\tthreads_memory <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">for</span> thread <span class=\"token keyword\">in</span> process<span class=\"token punctuation\">.</span>threads<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\t\t\t\tthread_proc <span class=\"token operator\">=</span> psutil<span class=\"token punctuation\">.</span>Process<span class=\"token punctuation\">(</span>thread<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\t\t\t\tthreads_memory<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token string\">'thread_id'</span><span class=\"token punctuation\">:</span> thread<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token string\">'memory_info'</span><span class=\"token punctuation\">:</span> thread_proc<span class=\"token punctuation\">.</span>memory_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>_asdict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">except</span> <span class=\"token punctuation\">(</span>psutil<span class=\"token punctuation\">.</span>NoSuchProcess<span class=\"token punctuation\">,</span> psutil<span class=\"token punctuation\">.</span>AccessDenied<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t\t\t<span class=\"token keyword\">continue</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'process'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token string\">'pid'</span><span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'memory_percent'</span><span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>memory_percent<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'memory_info'</span><span class=\"token punctuation\">:</span> memory_info<span class=\"token punctuation\">.</span>_asdict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'num_threads'</span><span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>num_threads<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'open_files'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>open_files<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'connections'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>connections<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">'threads'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>\n\t\t\t\tthreads_memory<span class=\"token punctuation\">,</span>\n\t\t\t\tkey<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token string\">'memory_info'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'rss'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t\treverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>\n\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># Top 5 memory consuming threads</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token decorator annotation punctuation\">@staticmethod</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">get_system_memory_details</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Dict<span class=\"token punctuation\">:</span>\n\t\tvm <span class=\"token operator\">=</span> psutil<span class=\"token punctuation\">.</span>virtual_memory<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\tswap <span class=\"token operator\">=</span> psutil<span class=\"token punctuation\">.</span>swap_memory<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'virtual_memory'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token string\">'total'</span><span class=\"token punctuation\">:</span> vm<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'available'</span><span class=\"token punctuation\">:</span> vm<span class=\"token punctuation\">.</span>available<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'used'</span><span class=\"token punctuation\">:</span> vm<span class=\"token punctuation\">.</span>used<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'free'</span><span class=\"token punctuation\">:</span> vm<span class=\"token punctuation\">.</span>free<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'percent'</span><span class=\"token punctuation\">:</span> vm<span class=\"token punctuation\">.</span>percent<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'inactive'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> <span class=\"token string\">'inactive'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'buffers'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> <span class=\"token string\">'buffers'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'cached'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> <span class=\"token string\">'cached'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'shared'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> <span class=\"token string\">'shared'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">'swap_memory'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token string\">'total'</span><span class=\"token punctuation\">:</span> swap<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'used'</span><span class=\"token punctuation\">:</span> swap<span class=\"token punctuation\">.</span>used<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'free'</span><span class=\"token punctuation\">:</span> swap<span class=\"token punctuation\">.</span>free<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'percent'</span><span class=\"token punctuation\">:</span> swap<span class=\"token punctuation\">.</span>percent<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'sin'</span><span class=\"token punctuation\">:</span> swap<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'sout'</span><span class=\"token punctuation\">:</span> swap<span class=\"token punctuation\">.</span>sout\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"now-what\"><a href=\"#now-what\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Now, what?</h2>\n<p>Well. These are skeletal classes that needs to be plugged somewhere or made use of. The <code class=\"language-text\">EnhancedHealthCheck</code> contains\nmethods that dealt with time formatting, listening to requests to track them down, take a memory source to monitor (the\n<code class=\"language-text\">__init__</code> method), etc.</p>\n<div class=\"gridsome-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">EnhancedHealthCheck</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> app<span class=\"token punctuation\">:</span> FastAPI<span class=\"token punctuation\">,</span> db_client<span class=\"token punctuation\">:</span> AsyncIOMotorClient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tself<span class=\"token punctuation\">.</span>app <span class=\"token operator\">=</span> app\n\t\tself<span class=\"token punctuation\">.</span>db_client <span class=\"token operator\">=</span> db_client\n\t\tself<span class=\"token punctuation\">.</span>start_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\tself<span class=\"token punctuation\">.</span>metrics <span class=\"token operator\">=</span> ApplicationMetrics<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\tself<span class=\"token punctuation\">.</span>memory_analytics <span class=\"token operator\">=</span> MemoryAnalytics<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">format_uptime</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> seconds<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n\t\tdays <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span><span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tseconds <span class=\"token operator\">=</span> seconds <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">)</span>\n\t\thours <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">//</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">)</span>\n\t\tseconds <span class=\"token operator\">%=</span> <span class=\"token number\">3600</span>\n\t\tminutes <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">//</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n\t\tseconds <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">%</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n\n\t\tparts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">if</span> days <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\tparts<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>days<span class=\"token punctuation\">}</span></span><span class=\"token string\">d\"</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> hours <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\tparts<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>hours<span class=\"token punctuation\">}</span></span><span class=\"token string\">h\"</span></span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> minutes <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\t\tparts<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>minutes<span class=\"token punctuation\">}</span></span><span class=\"token string\">m\"</span></span><span class=\"token punctuation\">)</span>\n\t\tparts<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>seconds<span class=\"token punctuation\">}</span></span><span class=\"token string\">s\"</span></span><span class=\"token punctuation\">)</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>parts<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">track_request_metrics</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">:</span> Request<span class=\"token punctuation\">,</span> call_next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tstart_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\t\t\tresponse <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> call_next<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span>\n\n\t\t\t<span class=\"token comment\"># Update metrics</span>\n\t\t\tself<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>request_count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t\t\tresponse_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start_time\n\t\t\tself<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>response_times<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>response_time<span class=\"token punctuation\">)</span>\n\n\t\t\t<span class=\"token comment\"># Track endpoint usage</span>\n\t\t\tendpoint <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>request<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\t\t\tself<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>endpoints_usage<span class=\"token punctuation\">[</span>endpoint<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n\t\t\t\tself<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>endpoints_usage<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>endpoint<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\t\t\t<span class=\"token punctuation\">)</span>\n\n\t\t\t<span class=\"token comment\"># Track status codes</span>\n\t\t\tself<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>status_codes<span class=\"token punctuation\">[</span>response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n\t\t\t\tself<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>status_codes<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\t\t\t<span class=\"token punctuation\">)</span>\n\n\t\t\t<span class=\"token keyword\">return</span> response\n\t\t<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n\t\t\tself<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>error_count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t\t\tself<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>add_error<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token string\">\"timestamp\"</span><span class=\"token punctuation\">:</span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span>timezone<span class=\"token punctuation\">.</span>utc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d %H:%M:%S UTC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"error\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"endpoint\"</span><span class=\"token punctuation\">:</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>request<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">raise</span>\n\n\t<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">get_detailed_health</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">:</span> Request<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Dict<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> Any<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n\t\tuptime_seconds <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>start_time\n\n\t\t<span class=\"token comment\"># Check database connection</span>\n\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">await</span> self<span class=\"token punctuation\">.</span>db_client<span class=\"token punctuation\">.</span>server_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\tdb_status <span class=\"token operator\">=</span> <span class=\"token string\">\"healthy\"</span>\n\t\t<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n\t\t\tdb_status <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"error: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n\t\tmemory_analysis <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'process'</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>memory_analytics<span class=\"token punctuation\">.</span>get_process_memory_details<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">'system'</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>memory_analytics<span class=\"token punctuation\">.</span>get_system_memory_details<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"healthy\"</span> <span class=\"token keyword\">if</span> db_status <span class=\"token operator\">==</span> <span class=\"token string\">\"healthy\"</span> <span class=\"token keyword\">else</span> <span class=\"token string\">\"unhealthy\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"uptime\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token string\">\"seconds\"</span><span class=\"token punctuation\">:</span> uptime_seconds<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"formatted\"</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>format_uptime<span class=\"token punctuation\">(</span>uptime_seconds<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"database\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> db_status\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"memory_analysis\"</span><span class=\"token punctuation\">:</span> memory_analysis<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"application\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token string\">\"total_requests\"</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>request_count<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"error_count\"</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>error_count<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"error_rate\"</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>get_error_rate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"average_response_time\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>get_average_response_time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"status_codes\"</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>status_codes<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"endpoints\"</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>endpoints_usage<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"recent_errors\"</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>last_errors\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The last method is the <code class=\"language-text\">get_dashboard_html()</code> method from Claude. I can't explain it but it's a beautiful one. AI is a\ngood companion o. Can they work on one that'll generate mockups or smtn in Figma? I need that urgently!</p>\n<p>The <code class=\"language-text\">get_dashboard_html()</code> is defined as:</p>\n<div class=\"gridsome-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">get_dashboard_html</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token triple-quoted-string string\">\"\"\"\n&lt;!DOCTYPE html>\n&lt;html>\n   &lt;head>\n      &lt;title>Enhanced Server Status Dashboard&lt;/title>\n      &lt;script src=\"https://cdn.jsdelivr.net/npm/chart.js\">&lt;/script>\n      &lt;style>\n         body {\n         font-family: Arial, sans-serif;\n         margin: 20px;\n         background-color: #f5f5f5;\n         padding-bottom: 40px;\n         }\n         .grid {\n         display: grid;\n         grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n         gap: 20px;\n         }\n         .card {\n         border: 1px solid #ddd;\n         border-radius: 8px;\n         padding: 15px;\n         background: white;\n         box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n         }\n         .metric-value {\n         font-size: 24px;\n         font-weight: bold;\n         color: #2c3e50;\n         }\n         .metric-label {\n         color: #7f8c8d;\n         font-size: 14px;\n         }\n         .healthy { color: #27ae60; }\n         .warning { color: #f39c12; }\n         .error { color: #c0392b; }\n         .refresh-btn {\n         position: fixed;\n         top: 20px;\n         right: 20px;\n         padding: 10px 20px;\n         background-color: #4CAF50;\n         color: white;\n         border: none;\n         border-radius: 4px;\n         cursor: pointer;\n         z-index: 1000;\n         transition: background-color 0.3s ease;\n         }\n         .refresh-btn:hover {\n         background-color: #45a049;\n         }\n         .refresh-btn:active {\n         transform: scale(0.98);\n         }\n         .last-updated {\n         position: fixed;\n         top: 60px;\n         right: 20px;\n         color: #666;\n         font-size: 12px;\n         z-index: 1000;\n         }\n         .header {\n         margin-bottom: 20px;\n         padding-right: 200px;\n         }\n         .memory-bar {\n         width: 100%;\n         height: 24px;\n         background: #f0f0f0;\n         border-radius: 4px;\n         overflow: hidden;\n         margin: 10px 0;\n         display: flex;\n         }\n         .bar-segment {\n         height: 100%;\n         display: inline-block;\n         text-align: center;\n         color: white;\n         font-size: 12px;\n         line-height: 24px;\n         }\n         .bar-segment.used {\n         background-color: #ff6b6b;\n         }\n         .bar-segment.cached {\n         background-color: #4ecdc4;\n         }\n         .bar-segment.free {\n         background-color: #95a5a6;\n         }\n         .memory-details, .memory-stats {\n         font-size: 14px;\n         margin: 10px 0;\n         }\n         .thread-list {\n         max-height: 200px;\n         overflow-y: auto;\n         }\n         .thread-item {\n         padding: 5px;\n         border-bottom: 1px solid #eee;\n         }\n         .error-item {\n         margin-bottom: 10px;\n         padding: 8px;\n         border-left: 4px solid #c0392b;\n         background-color: #fef2f2;\n         }\n         .error-item strong {\n         color: #c0392b;\n         }\n      &lt;/style>\n   &lt;/head>\n   &lt;body>\n      &lt;div class=\"header\">\n         &lt;h1>Enhanced Server Status Dashboard&lt;/h1>\n      &lt;/div>\n      &lt;button class=\"refresh-btn\" id=\"refresh-dashboard\">\n      Refresh Dashboard\n      &lt;/button>\n      &lt;div class=\"last-updated\" id=\"last-updated\">&lt;/div>\n      &lt;div class=\"grid\">\n         &lt;div class=\"card\">\n            &lt;h2>System Overview&lt;/h2>\n            &lt;div id=\"system-overview\">&lt;/div>\n         &lt;/div>\n         &lt;div class=\"card\">\n            &lt;h2>Resource Usage&lt;/h2>\n            &lt;canvas id=\"resourceChart\">&lt;/canvas>\n         &lt;/div>\n         &lt;div class=\"card\">\n            &lt;h2>Memory Analysis&lt;/h2>\n            &lt;div id=\"memory-analysis\">&lt;/div>\n         &lt;/div>\n         &lt;div class=\"card\">\n            &lt;h2>Application Metrics&lt;/h2>\n            &lt;div id=\"app-metrics\">&lt;/div>\n         &lt;/div>\n         &lt;div class=\"card\">\n            &lt;h2>Recent Errors&lt;/h2>\n            &lt;div id=\"recent-errors\">&lt;/div>\n         &lt;/div>\n         &lt;div class=\"card\">\n            &lt;h2>Endpoint Usage&lt;/h2>\n            &lt;canvas id=\"endpointChart\">&lt;/canvas>\n         &lt;/div>\n      &lt;/div>\n      &lt;script>\n         let dashboardActive = true;\n         let updateInterval;\n         let isUpdating = false;  // Flag to prevent multiple simultaneous updates\n\n         function formatBytes(bytes, decimals = 2) {\n         if (bytes === 0) return '0 Bytes';\n         const k = 1024;\n         const dm = decimals &lt; 0 ? 0 : decimals;\n         const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n         const i = Math.floor(Math.log(bytes) / Math.log(k));\n         return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n         }\n\n         async function updateDashboard() {\n         if (isUpdating) return;  // Prevent multiple simultaneous updates\n         isUpdating = true;\n\n         try {\n         const response = await fetch('/api/v1/health');\n         const data = await response.json();\n\n         // Update system overview\n         document.getElementById('system-overview').innerHTML = `\n         &lt;div class=\"metric\">\n         &lt;div class=\"metric-value ${data.status}\">${data.status}&lt;/div>\n         &lt;div class=\"metric-label\">Status&lt;/div>\n         &lt;/div>\n         &lt;div class=\"metric\">\n         &lt;div class=\"metric-value\">${data.uptime.formatted}&lt;/div>\n         &lt;div class=\"metric-label\">Uptime&lt;/div>\n         &lt;/div>\n         `;\n\n         // Update application metrics\n         document.getElementById('app-metrics').innerHTML = `\n         &lt;div class=\"metric\">\n         &lt;div class=\"metric-value\">${data.application.total_requests}&lt;/div>\n         &lt;div class=\"metric-label\">Total Requests&lt;/div>\n         &lt;/div>\n         &lt;div class=\"metric\">\n         &lt;div class=\"metric-value\">${data.application.error_rate.toFixed(2)}%&lt;/div>\n         &lt;div class=\"metric-label\">Error Rate&lt;/div>\n         &lt;/div>\n         &lt;div class=\"metric\">\n         &lt;div class=\"metric-value\">${data.application.average_response_time}s&lt;/div>\n         &lt;div class=\"metric-label\">Avg Response Time&lt;/div>\n         &lt;/div>\n         `;\n\n         // Update memory analysis\n         const memoryAnalysis = document.getElementById('memory-analysis');\n         const memData = data.memory_analysis;\n\n         memoryAnalysis.innerHTML = `\n         &lt;h3>Process Memory&lt;/h3>\n         &lt;div class=\"memory-metric\">\n         &lt;div class=\"metric-value\">${memData.process.process.memory_percent.toFixed(2)}%&lt;/div>\n         &lt;div class=\"metric-label\">Process Memory Usage&lt;/div>\n         &lt;/div>\n         &lt;div class=\"memory-details\">\n         &lt;p>RSS: ${formatBytes(memData.process.process.memory_info.rss)}&lt;/p>\n         &lt;p>VMS: ${formatBytes(memData.process.process.memory_info.vms)}&lt;/p>\n         &lt;p>Threads: ${memData.process.process.num_threads}&lt;/p>\n         &lt;p>Open Files: ${memData.process.process.open_files}&lt;/p>\n         &lt;/div>\n\n         &lt;h3>System Memory&lt;/h3>\n         &lt;div class=\"memory-system\">\n         &lt;div class=\"memory-bar\">\n         &lt;div class=\"bar-segment used\"\n         style=\"width: ${memData.system.virtual_memory.percent}%\">\n         Used (${memData.system.virtual_memory.percent}%)\n         &lt;/div>\n         &lt;div class=\"bar-segment cached\"\n         style=\"width: ${(memData.system.virtual_memory.cached || 0) / memData.system.virtual_memory.total * 100}%\">\n         Cached\n         &lt;/div>\n         &lt;div class=\"bar-segment free\"\n         style=\"width: ${100 - memData.system.virtual_memory.percent}%\">\n         Free\n         &lt;/div>\n         &lt;/div>\n         &lt;div class=\"memory-stats\">\n         &lt;p>Total: ${formatBytes(memData.system.virtual_memory.total)}&lt;/p>\n         &lt;p>Available: ${formatBytes(memData.system.virtual_memory.available)}&lt;/p>\n         &lt;p>Used: ${formatBytes(memData.system.virtual_memory.used)}&lt;/p>\n         &lt;p>Cached: ${formatBytes(memData.system.virtual_memory.cached || 0)}&lt;/p>\n         &lt;/div>\n         &lt;/div>\n\n         &lt;h3>Top Memory Threads&lt;/h3>\n         &lt;div class=\"thread-list\">\n         ${memData.process.threads.map(thread => `\n         &lt;div class=\"thread-item\">\n         Thread ${thread.thread_id}: ${formatBytes(thread.memory_info.rss)}\n         &lt;/div>\n         `).join('')}\n         &lt;/div>\n         `;\n\n         // Update recent errors\n         document.getElementById('recent-errors').innerHTML =\n         data.application.recent_errors\n         .map(error => `\n         &lt;div class=\"error-item\">\n         &lt;strong>${error.timestamp}&lt;/strong>\n         &lt;p>${error.error}&lt;/p>\n         &lt;small>${error.endpoint}&lt;/small>\n         &lt;/div>\n         `)\n         .join('');\n\n         // Update charts\n         updateResourceChart(data);\n         updateEndpointChart(data);\n\n         // Update last updated timestamp\n         updateLastUpdated();\n\n         } catch (error) {\n         console.error('Failed to update dashboard:', error);\n         } finally {\n         isUpdating = false;  // Reset the update flag\n         }\n         }\n\n         function updateResourceChart(data) {\n         const ctx = document.getElementById('resourceChart').getContext('2d');\n         const processData = data.memory_analysis.process.process;\n\n         new Chart(ctx, {\n         type: 'bar',\n         data: {\n         labels: ['Memory Usage', 'Threads', 'Open Files', 'Connections'],\n         datasets: [{\n         label: 'Mercury Process Metrics',\n         data: [\n         processData.memory_percent,\n         processData.num_threads,\n         processData.open_files,\n         processData.connections\n         ],\n         backgroundColor: [\n         'rgba(54, 162, 235, 0.2)',  // Memory\n         'rgba(255, 99, 132, 0.2)',   // Threads\n         'rgba(75, 192, 192, 0.2)',   // Files\n         'rgba(255, 206, 86, 0.2)'    // Connections\n         ],\n         borderColor: [\n         'rgba(54, 162, 235, 1)',\n         'rgba(255, 99, 132, 1)',\n         'rgba(75, 192, 192, 1)',\n         'rgba(255, 206, 86, 1)'\n         ],\n         borderWidth: 1\n         }]\n         },\n         options: {\n         responsive: true,\n         scales: {\n         y: {\n         beginAtZero: true,\n         title: {\n         display: true,\n         text: 'Count/Percentage'\n         }\n         }\n         },\n         plugins: {\n         title: {\n         display: true,\n         text: 'Mercury Process Resources'\n         },\n         tooltip: {\n         callbacks: {\n         label: function(context) {\n         const label = context.dataset.label || '';\n         const value = context.parsed.y;\n         if (context.dataIndex === 0) {\n         return `Memory: ${value.toFixed(2)}%`;\n         }\n         return `${context.label}: ${value}`;\n         }\n         }\n         }\n         }\n         }\n         });\n         }\n\n         function updateEndpointChart(data) {\n         const ctx = document.getElementById('endpointChart').getContext('2d');\n         const endpoints = Object.keys(data.application.endpoints);\n         const counts = Object.values(data.application.endpoints);\n\n         new Chart(ctx, {\n         type: 'pie',\n         data: {\n         labels: endpoints,\n         datasets: [{\n         data: counts,\n         backgroundColor: endpoints.map(() =>\n         `hsl(${Math.random() * 360}, 70%, 50%)`\n         )\n         }]\n         }\n         });\n         }\n\n         function updateLastUpdated() {\n         const now = new Date().toLocaleString();\n         document.getElementById('last-updated').textContent = `Last updated: ${now}`;\n         }\n\n         function startDashboardUpdates() {\n         dashboardActive = true;\n         updateDashboard();\n         updateInterval = setInterval(updateDashboard, 30000); // 30 seconds\n         }\n\n         function stopDashboardUpdates() {\n         dashboardActive = false;\n         if (updateInterval) {\n         clearInterval(updateInterval);\n         }\n         }\n\n         // Handle page visibility\n         document.addEventListener('visibilitychange', function() {\n         if (document.hidden) {\n         stopDashboardUpdates();\n         } else {\n         startDashboardUpdates();\n         }\n         });\n\n         // Handle refresh button click\n         document.addEventListener('DOMContentLoaded', function() {\n         document.getElementById('refresh-dashboard').addEventListener('click', function() {\n         updateDashboard();\n         });\n         });\n\n         // Initial load\n         startDashboardUpdates();\n      &lt;/script>\n   &lt;/body>\n&lt;/html>\n \"\"\"</span></code></pre></div>\n<h2 id=\"wrap-it-up\"><a href=\"#wrap-it-up\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Wrap it up!</h2>\n<p>Since I needed this to work in my FastAPI application, I had it all wrapped up in a function so I can just make use of\nit in my main app:</p>\n<div class=\"gridsome-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">setup_enhanced_health_routes</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">:</span> FastAPI<span class=\"token punctuation\">,</span> db_client<span class=\"token punctuation\">:</span> AsyncIOMotorClient<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n\thealth_checker <span class=\"token operator\">=</span> EnhancedHealthCheck<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> db_client<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>middleware</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">metrics_middleware</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">:</span> Request<span class=\"token punctuation\">,</span> call_next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> health_checker<span class=\"token punctuation\">.</span>track_request_metrics<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> call_next<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/health\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">health</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">:</span> Request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> health_checker<span class=\"token punctuation\">.</span>get_detailed_health<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/dashboard\"</span><span class=\"token punctuation\">,</span> response_class<span class=\"token operator\">=</span>HTMLResponse<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">dashboard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> health_checker<span class=\"token punctuation\">.</span>get_dashboard_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Here's how the dashboard looks:</p>\n<p><img src=\"https://i.ibb.co/DHcVKwvP/Screenshot-2025-02-14-at-23-27-02.png\" alt=\"Dashboard\"></p>\n<p>A database client is attached so I can monitor the I/O operations and know when to panic and when not to.</p>\n<h2 id=\"thanks\"><a href=\"#thanks\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thanks</h2>\n<p>Thanks to Claude, truly. I can't do it all and that's why we have them(LLMs).</p>\n<hr>\n","date":"14 February 2025","timeToRead":14,"image":null}},"context":{}}